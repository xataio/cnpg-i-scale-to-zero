name: CI

on:
  pull_request:
  push:
    branches:
      - main
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_PLUGIN: ${{ github.repository }}
  IMAGE_NAME_SIDECAR: ${{ github.repository }}-sidecar
  IS_MAIN_BRANCH: ${{ github.ref == 'refs/heads/main' }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: make test

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1.0

  docker-build:
    needs: [test, lint]
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'release'
    uses: ./.github/workflows/docker-build.yml
    with:
      image_tag: ${{ github.event_name == 'release' && github.event.release.tag_name || format('main-{0}', github.sha) }}
      should_push: true
      generate_manifest: true
      manifest_name: ${{ github.event_name == 'release' && 'kubernetes-manifest' || 'kubernetes-manifest-main' }}
    secrets: inherit

  upload-release-manifest:
    runs-on: ubuntu-latest
    needs: [docker-build]
    if: github.event_name == 'release'
    steps:
      - name: Download manifest artifact
        uses: actions/download-artifact@v4
        with:
          name: kubernetes-manifest-release

      - name: Upload manifest to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.event.release.tag_name }} ./manifest.yaml --clobber
