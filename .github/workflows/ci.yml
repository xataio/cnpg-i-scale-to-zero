name: CI

on:
  pull_request:
  push:
    branches:
      - main
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_PLUGIN: ${{ github.repository }}
  IMAGE_NAME_SIDECAR: ${{ github.repository }}-sidecar
  IMAGE_TAG: ${{ github.event_name == 'release' && github.event.release.tag_name || 'main' }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: make test

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1.0

  docker:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'release'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for plugin image
        id: meta-plugin
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_PLUGIN }}
          tags: |
            type=raw,value=main,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-
            type=ref,event=tag
            type=raw,value=latest,enable=${{ github.event_name == 'release' }}

      - name: Extract metadata for sidecar image
        id: meta-sidecar
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_SIDECAR }}
          tags: |
            type=raw,value=main,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-
            type=ref,event=tag
            type=raw,value=latest,enable=${{ github.event_name == 'release' }}

      - name: Build and push plugin Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.plugin
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-plugin.outputs.tags }}
          labels: ${{ steps.meta-plugin.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push sidecar Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.sidecar
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-sidecar.outputs.tags }}
          labels: ${{ steps.meta-sidecar.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  manifest:
    runs-on: ubuntu-latest
    needs: [docker]
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'release'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin/

      - name: Update kustomization with image tag
        run: |
          # Update the plugin image tag in kustomization.yaml
          sed -i "s/newTag: main/newTag: ${{ env.IMAGE_TAG }}/g" kubernetes/kustomization.yaml

          # Update the secret generator value to use the correct sidecar tag
          sed -i "s|ghcr.io/xataio/cnpg-i-scale-to-zero-sidecar:main|ghcr.io/xataio/cnpg-i-scale-to-zero-sidecar:${{ env.IMAGE_TAG }}|g" kubernetes/kustomization.yaml

      - name: Generate manifest
        run: make manifest

      - name: Upload manifest artifact
        uses: actions/upload-artifact@v4
        with:
          name: kubernetes-manifest${{ github.event_name == 'release' && '' || '-main' }}
          path: |
            manifest.yaml
          retention-days: 30
